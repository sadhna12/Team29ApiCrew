{
	"info": {
		"_postman_id": "daeaf876-9d24-43cd-ac75-849f5c594e86",
		"name": "Team29_ApiCrews_LMS_OLD",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33419336",
		"_collection_link": "https://dark-spaceship-5357.postman.co/workspace/402b40ea-03e2-4534-90d5-5f0a962cc8d6/collection/33441530-daeaf876-9d24-43cd-ac75-849f5c594e86?action=share&source=collection_link&creator=33419336"
	},
	"item": [
		{
			"name": "User Login",
			"item": [
				{
					"name": "Negative",
					"item": [
						{
							"name": "User Sign in",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"userLoginEmailId\": \"sdetorganizers@gmail.com\",\r\n  \"password\": \"Numpyninja@2\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/login",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "User Logout",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJzZGV0b3JnYW5pemVyc0BnbWFpbC5jb20iLCJpYXQiOjE3MTAwMDU2OTYsImV4cCI6MTcxMDAzNDQ5Nn0.uiEJx4FvkMaLntodaN6hdx_YoCTMcFQpy1wy75pR_nJMHAp2krWYbtTFKjekTiGmocB0Ua__ekQSq",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/logoutlms",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"logoutlms"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Positive",
					"item": [
						{
							"name": "User Sign in",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"userLoginEmailId\": \"sdetorganizers@gmail.com\",\r\n  \"password\": \"Numpyninja@1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/login",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "User log out",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJzZGV0b3JnYW5pemVyc0BnbWFpbC5jb20iLCJpYXQiOjE3MTAwNjU5ODUsImV4cCI6MTcxMDA5NDc4NX0.bGc1YmfGV5BNFi29UPtWyuLnX7T_X0O3hMIZHxU1xyqnNrMjB9pomLYoPt6HaLBXeGWo_fawuvEVmibvQoRVXQ",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/logoutlms",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"logoutlms"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "New Folder",
					"item": []
				}
			]
		},
		{
			"name": "Program",
			"item": [
				{
					"name": "Add_New_Program-201",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//var cDateStr = new Date().toISOString();\r",
									"//var lDateStr = new Date().toISOString();\r",
									"var date = new Date();\r",
									"//var year = date.getFullYear().toString();\r",
									"//var day = date.getDay().toString();\r",
									"var hour = date.getHours().toString();\r",
									"var minute = date.getMinutes().toString();\r",
									"var secs = date.getMilliseconds().toString();\r",
									"//var dateformat = year + month + day + hour + minute + secs;\r",
									"var month = date.getMonth().toString();\r",
									"var dateformat = hour+minute+month+secs;\r",
									"pm.globals.set(\"counter\",dateformat);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//validate status code\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"//validate headers\r",
									"pm.test('content-type header is present',()=>{\r",
									"pm.response.to.have.header('Content-Type');\r",
									"});\r",
									"pm.test('content-types header is application/json',()=> {\r",
									"pm.expect(pm.response.headers.\r",
									"    get(\"Content-Type\")).to.eql(\"application/json\");\r",
									"});\r",
									"\r",
									"//validate data type\r",
									"const response = pm.response.json();\r",
									"pm.test('test data-types of the response',()=> {\r",
									"pm.expect(response).to.be.an('object');\r",
									"pm.expect(response.programName).to.be.a('string');\r",
									"pm.expect(response.programStatus).to.be.a('string');\r",
									"pm.expect(response.programDescription).to.be.a('string');\r",
									"pm.expect(response.programId).to.be.a('number');\r",
									"});\r",
									"\r",
									"//validate schema\r",
									"var schema={\r",
									"'$schema': 'http://json-schema.org/draft-07/schema#',\r",
									"'title': 'Generated schema for Root',\r",
									"'type': 'object',\r",
									"'properties': {\r",
									"'programId': {\r",
									"'type': 'number'\r",
									"},\r",
									"'programName': {\r",
									"'type': 'string'\r",
									"},\r",
									"'programDescription': {\r",
									"'type': 'string'\r",
									"},\r",
									"'programStatus': {\r",
									"'type': 'string'\r",
									"},\r",
									"'creationTime': {\r",
									"'type': 'string'\r",
									"},\r",
									"'lastModTime': {\r",
									"'type': 'string'\r",
									"}\r",
									"},\r",
									"'required': [\r",
									"'programId',\r",
									"'programName',\r",
									"'programStatus',\r",
									"'creationTime',\r",
									"'lastModTime'\r",
									"]\r",
									"}\r",
									"pm.test('schema validations',()=>{\r",
									"pm.expect(tv4.validate(response,schema)).to.be.true;\r",
									"});\r",
									"\r",
									"console.log(response.programId);\r",
									"pm.globals.set('PROGRAMID', response.programId);\r",
									"console.log(response.programName);\r",
									"pm.globals.set('PROGRAMNAME', response.programName);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"programDescription\" : \"{{programDesc}}\",\r\n\"programName\" : \"{{teamName}}{{programName}}{{counter}}\",\r\n\"programStatus\" : \"{{programStatus}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/saveprogram",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"saveprogram"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add_New_Program-400",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//var cDateStr = new Date().toISOString();\r",
									"//var lDateStr = new Date().toISOString();\r",
									"var date = new Date();\r",
									"//var year = date.getFullYear().toString();\r",
									"//var day = date.getDay().toString();\r",
									"var hour = date.getHours().toString();\r",
									"var minute = date.getMinutes().toString();\r",
									"var secs = date.getMilliseconds().toString();\r",
									"//var dateformat = year + month + day + hour + minute + secs;\r",
									"var month = date.getMonth().toString();\r",
									"var dateformat = hour+minute+month+secs;\r",
									"pm.globals.set(\"counter\",dateformat);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"programDescription\" : \"{{programDesc}}\",\r\n\"programName\" : \"{{PROGRAMNAME}}\",\r\n\"programStatus\" : \"{{programStatus}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/saveprogram",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"saveprogram"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add_New_Program-500",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// //var cDateStr = new Date().toISOString();\r",
									"// //var lDateStr = new Date().toISOString();\r",
									"// var date = new Date();\r",
									"// //var year = date.getFullYear().toString();\r",
									"// //var day = date.getDay().toString();\r",
									"// var hour = date.getHours().toString();\r",
									"// var minute = date.getMinutes().toString();\r",
									"// var secs = date.getMilliseconds().toString();\r",
									"// //var dateformat = year + month + day + hour + minute + secs;\r",
									"// var month = date.getMonth().toString();\r",
									"// var dateformat = hour+minute+month+secs;\r",
									"// pm.globals.set(\"counter\",dateformat);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"programDescription\" : \"{{programDesc}}\",\r\n\"programName\" : \"{{PROGRAMNAME}}\",\r\n\"programStatus\" : \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/saveprogram",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"saveprogram"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get_All_Programs-200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/allPrograms",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"allPrograms"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get_All_Programs_With_Users-200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/allProgramsWithUsers",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"allProgramsWithUsers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get_Program_By_ProgramID-200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/programs/{{PROGRAMID}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"programs",
								"{{PROGRAMID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update_Program_By_Program_Name-400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"programDescription\" : \"a**1**\",\r\n\"programName\" : \"{{PROGRAMNAME}}\",\r\n\"programStatus\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/program/{{PROGRAMNAME}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"program",
								"{{PROGRAMNAME}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update_Program_By_Program_Name-200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"const response = pm.response.json();\r",
									"console.log(response.programId);\r",
									"pm.globals.set('PROGRAMID', response.programId);\r",
									"console.log(response.programName);\r",
									"pm.globals.set('PROGRAMNAME', response.programName);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"programDescription\" : \"{{programDescUpdated}}\",\r\n\"programName\" : \"{{PROGRAMNAME}}\",\r\n\"programStatus\" : \"{{programStatus}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/program/{{PROGRAMNAME}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"program",
								"{{PROGRAMNAME}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update_Program_By_Program_ID-400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"programDescription\" : \"\",\r\n\"programName\" : \"\",\r\n\"programStatus\" : \"{{programStatus}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/putprogram/{{PROGRAMID}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"putprogram",
								"{{PROGRAMID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update_Program_By_Program_ID-200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"const response = pm.response.json();\r",
									"console.log(response.programId);\r",
									"pm.globals.set('PROGRAMID', response.programId);\r",
									"console.log(response.programName);\r",
									"pm.globals.set('PROGRAMNAME', response.programName);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"programDescription\" : \"{{programDescUpdated}}\",\r\n\"programName\" : \"{{PROGRAMNAME}}\",\r\n\"programStatus\" : \"{{programStatus}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/putprogram/{{PROGRAMID}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"putprogram",
								"{{PROGRAMID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete_Program_By_Program_ID-200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/deletebyprogid/{{PROGRAMID}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"deletebyprogid",
								"{{PROGRAMID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update_Program_By_Program_ID-404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.set('PROGRAMID',\"{{invalidProgramID}}\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"programDescription\" : \"{{programDescUpdated}}\",\r\n\"programName\" : \"{{PROGRAMNAME}}\",\r\n\"programStatus\" : \"{{programStatus}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/putprogram/{{PROGRAMID}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"putprogram",
								"{{PROGRAMID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete_Program_By_Program_ID-404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/deletebyprogid/{{PROGRAMID}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"deletebyprogid",
								"{{PROGRAMID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get_Program_By_ProgramID-404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/programs/{{PROGRAMID}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"programs",
								"{{PROGRAMID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add_New_Program-201",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//var cDateStr = new Date().toISOString();\r",
									"//var lDateStr = new Date().toISOString();\r",
									"var date = new Date();\r",
									"//var year = date.getFullYear().toString();\r",
									"//var day = date.getDay().toString();\r",
									"var hour = date.getHours().toString();\r",
									"var minute = date.getMinutes().toString();\r",
									"var secs = date.getMilliseconds().toString();\r",
									"//var dateformat = year + month + day + hour + minute + secs;\r",
									"var month = date.getMonth().toString();\r",
									"var dateformat = hour+minute+month+secs;\r",
									"pm.globals.set(\"counter\",dateformat);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"const response = pm.response.json();\r",
									"console.log(response.programId);\r",
									"pm.globals.set('PROGRAMID', response.programId);\r",
									"console.log(response.programName);\r",
									"pm.globals.set('PROGRAMNAME', response.programName);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"programDescription\" : \"{{programDesc}}\",\r\n\"programName\" : \"{{teamName}}{{programName}}{{counter}}\",\r\n\"programStatus\" : \"{{programStatus}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/saveprogram",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"saveprogram"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete_Program_By_Program_Name-200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.globals.set('PROGRAMNAME',\"{{invalidProgramName}}\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/deletebyprogname/{{PROGRAMNAME}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"deletebyprogname",
								"{{PROGRAMNAME}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update_Program_By_Program_Name-404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"programDescription\" : \"{{programDescUpdated}}\",\r\n\"programName\" : \"{{PROGRAMNAME}}\",\r\n\"programStatus\" : \"{{programStatus}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/program/{{PROGRAMNAME}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"program",
								"{{PROGRAMNAME}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete_Program_By_Program_Name-404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/deletebyprogname/{{PROGRAMNAME}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"deletebyprogname",
								"{{PROGRAMNAME}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add_New_Program-201",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//var cDateStr = new Date().toISOString();\r",
									"//var lDateStr = new Date().toISOString();\r",
									"var date = new Date();\r",
									"//var year = date.getFullYear().toString();\r",
									"//var day = date.getDay().toString();\r",
									"var hour = date.getHours().toString();\r",
									"var minute = date.getMinutes().toString();\r",
									"var secs = date.getMilliseconds().toString();\r",
									"//var dateformat = year + month + day + hour + minute + secs;\r",
									"var month = date.getMonth().toString();\r",
									"var dateformat = hour+minute+month+secs;\r",
									"pm.globals.set(\"counter\",dateformat);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"const response = pm.response.json();\r",
									"console.log(response.programId);\r",
									"pm.globals.set('PROGRAMID', response.programId);\r",
									"console.log(response.programName);\r",
									"pm.globals.set('PROGRAMNAME', response.programName);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"programDescription\" : \"{{programDesc}}\",\r\n\"programName\" : \"{{teamName}}{{programName}}{{counter}}\",\r\n\"programStatus\" : \"{{programStatus}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/saveprogram",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"saveprogram"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create New Batch",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", ()=> {\r",
									"pm.response.to.have.status(201);\r",
									"})\r",
									"\r",
									"const response = pm.response.json();\r",
									" \r",
									"console.log(response.batchId);\r",
									"pm.globals.set('BATCHID', response.batchId);\r",
									"console.log(response.batchName);\r",
									"pm.globals.set('BATCHNAME', response.batchName);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var date = new Date();\r",
									"//var year = date.getFullYear().toString();\r",
									"//var day = date.getDay().toString();\r",
									"var hour = date.getHours().toString();\r",
									"var minute = date.getMinutes().toString();\r",
									"var secs = date.getMilliseconds().toString();\r",
									"//var dateformat = year + month + day + hour + minute + secs;\r",
									"var month = date.getMonth().toString();\r",
									"var dateformat = hour+minute+month+secs;\r",
									"pm.globals.set(\"counter\",dateformat);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"batchDescription\": \"{{batchDescription}}\",\r\n  \"batchName\":  \"{{teamName}}{{batchName}}{{counter}}\",\r\n  \"batchNoOfClasses\": \"{{NoOfClasses}}\",\r\n  \"batchStatus\": \"{{BatchStatus}}\",\r\n  \"programId\": \"{{PROGRAMID}}\"\r\n }\r\n ",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/batches",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"batches"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get_All_Batches-200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");\r",
									"});  \r",
									"        "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/batches",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"batches"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get_Batch_By_Batch_ID-200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//validate Response body\r",
									"   pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/batches/batchId/{{BATCHID}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"batches",
								"batchId",
								"{{BATCHID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get_Batch_By_Batch_Name-200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//validate Response body\r",
									"   pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/batches/batchName/{{BATCHNAME}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"batches",
								"batchName",
								"{{BATCHNAME}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get_Batch_By_Program_ID-200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//validate Response body\r",
									"   pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/batches/program/{{PROGRAMID}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"batches",
								"program",
								"{{PROGRAMID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update_By_Batch_ID-200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Validate Status Code\r",
									"pm.test(\"Status code is 200\", ()=>{\r",
									"pm.response.to.have.status(200);\r",
									"})\r",
									"// const response = pm.response.json();\r",
									"// //Validating Fields\r",
									"// pm.test(\"Test data type of the response\", ()=>{\r",
									"// pm.expect(response).to.be.an(\"object\");\r",
									"// pm.expect(response.batchId).to.be.an(\"number\");\r",
									"// pm.expect(response.batchName).to.be.an(\"string\");\r",
									"// //pm.expect(response.batchDescription).to.be.an(\"string\");\r",
									"// //pm.expect(response.batchNoOfClasses).to.be.an(\"number\");\r",
									"// //pm.expect(response.batchStatus).to.be.an(\"string\");\r",
									"// pm.expect(response.programId).to.be.an(\"number\");\r",
									"// pm.expect(response.programName).to.be.an(\"string\");\r",
									"// });\r",
									"// var schema =\r",
									"// {\r",
									"//   \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"//   \"type\": \"object\",\r",
									"//   \"properties\": {\r",
									"//     \"batchId\": {\r",
									"//       \"type\": \"integer\"\r",
									"//     },\r",
									"//     \"batchName\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"batchDescription\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"batchStatus\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"batchNoOfClasses\": {\r",
									"//       \"type\": \"integer\"\r",
									"//     },\r",
									"//     \"programId\": {\r",
									"//       \"type\": \"integer\"\r",
									"//     },\r",
									"//     \"programName\": {\r",
									"//       \"type\": \"string\"\r",
									"//     }\r",
									"//   },\r",
									"//   \"required\": [\r",
									"//     \"batchId\",\r",
									"//     \"batchName\",\r",
									"//     \"batchDescription\",\r",
									"//     \"batchStatus\",\r",
									"//     \"batchNoOfClasses\",\r",
									"//     \"programId\",\r",
									"//     \"programName\"\r",
									"//   ]\r",
									"// }\r",
									"// pm.test(\"Schema is valid\", ()=>{\r",
									"// pm.expect(tv4.validate(response,schema)).to.be.true\r",
									"// });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// var random_Batname=\"March24-Team29_APICrew-SDET-SDET93-\"+pm.variables.replaceIn('{{$randomInt}}');\r",
									"// pm.collectionVariables.get(\"programId\");\r",
									"// pm.collectionVariables.get(\"programName\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"batchDescription\": \"{{batchDescription}}\",\r\n  \"batchName\": \"{{BATCHNAME}}\",\r\n  \"batchNoOfClasses\": \"{{NoOfClasses}}\",\r\n  \"batchStatus\": \"{{programStatus}}\",\r\n  \"programId\": \"{{PROGRAMID}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/batches/{{BATCHID}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"batches",
								"{{BATCHID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create_UserRole_R03",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//validate status code\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"  //validates header\r",
									"pm.test(\"Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"const response= pm.response.json();\r",
									"//console.log(response.userId);\r",
									"pm.globals.set('USERID_R03', response.userId);\r",
									"\r",
									"pm.globals.set('EMAIL', response.userLoginEmail);\r",
									"//pm.globals.set(\"PWD\", response.password);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"const randomNumber = _.random(1000000000,9999999999)\r",
									"pm.variables.set(\"Phone\", randomNumber )\r",
									" \r",
									"\r",
									"var randomstr= \"sadana\"+Math.random().toString(36).substring(2);\r",
									"pm.variables.set(\"email\",randomstr+\"@gmail.com\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userComments\": \"{{userComments}}\",\r\n  \"userEduPg\": \"{{userEduPg}}\",\r\n  \"userEduUg\": \"{{userEduUg}}\",\r\n  \"userFirstName\": \"{{userFirstName}}\",\r\n  \"userId\": \"string\",\r\n  \"userLastName\": \"{{userLastName}}\",\r\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\r\n  \"userLocation\": \"{{userLocation}}\",\r\n  \"userLogin\": {\r\n    \"loginStatus\": \"{{loginStatus}}\",\r\n    \"password\": \"string\",\r\n    \"roleIds\": [\r\n      \"R03\"\r\n    ],\r\n    \"status\": \"{{status}}\",\r\n    \"userLoginEmail\": \"{{email}}\"\r\n  },\r\n  \"userMiddleName\": \"{{userMiddleName}}\",\r\n  \"userPhoneNumber\":\"{{Phone}}\",\r\n  \"userRoleMaps\": [\r\n    {\r\n      \"roleId\": \"R03\",\r\n      \"userRoleStatus\": \"{{userRoleStatus}}\"\r\n    }\r\n  ],\r\n  \"userTimeZone\": \"{{userTimeZone}}\",\r\n  \"userVisaStatus\": \"{{userVisaStatus}}\"\r\n}\r\n\r\n\r\n\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/roleStatus",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"roleStatus"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create_UserRole",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//validate status code\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"  //validates header\r",
									"pm.test(\"Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"const response= pm.response.json();\r",
									"//console.log(response.userId);\r",
									"pm.globals.set('USERID', response.userId);\r",
									"\r",
									"pm.globals.set('EMAIL', response.userLoginEmail);\r",
									"//pm.globals.set(\"PWD\", response.password);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"const randomNumber = _.random(1000000000,9999999999)\r",
									"pm.variables.set(\"Phone\", randomNumber )\r",
									" \r",
									"\r",
									"var randomstr= \"sadana\"+Math.random().toString(36).substring(2);\r",
									"pm.variables.set(\"email\",randomstr+\"@gmail.com\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userComments\": \"{{userComments}}\",\r\n  \"userEduPg\": \"{{userEduPg}}\",\r\n  \"userEduUg\": \"{{userEduUg}}\",\r\n  \"userFirstName\": \"{{userFirstName}}\",\r\n  \"userId\": \"string\",\r\n  \"userLastName\": \"{{userLastName}}\",\r\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\r\n  \"userLocation\": \"{{userLocation}}\",\r\n  \"userLogin\": {\r\n    \"loginStatus\": \"{{loginStatus}}\",\r\n    \"password\": \"string\",\r\n    \"roleIds\": [\r\n      \"R01\"\r\n    ],\r\n    \"status\": \"{{status}}\",\r\n    \"userLoginEmail\": \"{{email}}\"\r\n  },\r\n  \"userMiddleName\": \"{{userMiddleName}}\",\r\n  \"userPhoneNumber\":\"{{Phone}}\",\r\n  \"userRoleMaps\": [\r\n    {\r\n      \"roleId\": \"R01\",\r\n      \"userRoleStatus\": \"{{userRoleStatus}}\"\r\n    }\r\n  ],\r\n  \"userTimeZone\": \"{{userTimeZone}}\",\r\n  \"userVisaStatus\": \"{{userVisaStatus}}\"\r\n}\r\n\r\n\r\n\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/roleStatus",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"roleStatus"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get_All_Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/users",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update_User_200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userComments\": \"{{userComments}}\",\r\n  \"userEduPg\": \"{{userEduPg}}\",\r\n  \"userEduUg\": \"{{userEduUg}}\",\r\n  \"userFirstName\": \"{{userFirstName}}\",\r\n  \"userId\": \"{{USERID_R03}}\",\r\n  \"userLastName\": \"{{userLastName}}\",\r\n \"userMiddleName\": \"{{userMiddleName}}\",\r\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\r\n  \"userLocation\": \"{{userLocation}}\",\r\n   \"userPhoneNumber\": {{$randomInt}},\r\n  \"userTimeZone\": \"{{userTimeZone}}\",\r\n  \"userVisaStatus\": \"{{userVisaStatus}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/{{USERID_R03}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"{{USERID_R03}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update_User__RoleStatus_200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"roleId\": \"R02\",\r\n  \"userRoleStatus\": \"Active\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/roleStatus/{{USERID_R03}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"roleStatus",
								"{{USERID_R03}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign_Update_UserRole_Program_Batch_Status_200",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.get(\"PROGRAMID\");\r",
									"\r",
									"\r",
									"//pm.collectionVariables.get(\"BatchId\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"programId\": \"{{PROGRAMID}}\",\r\n  \"roleId\": \"R03\",\r\n  \"userId\": \"{{USERID_R03}}\",\r\n  \"userRoleProgramBatches\": [\r\n    {\r\n      \"batchId\": {{BATCHID}},\r\n      \"userRoleProgramBatchStatus\": \"Active\"\r\n    }\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/roleProgramBatchStatus/{{USERID_R03}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"roleProgramBatchStatus",
								"{{USERID_R03}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign_Update_UserRole_Program_Batch_Status_200",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.get(\"PROGRAMID\");\r",
									"\r",
									"\r",
									"//pm.collectionVariables.get(\"BatchId\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"programId\": \"{{PROGRAMID}}\",\r\n  \"roleId\": \"R03\",\r\n  \"userId\": \"{{USERID_R03}}\",\r\n  \"userRoleProgramBatches\": [\r\n    {\r\n      \"batchId\": {{BATCHID}},\r\n      \"userRoleProgramBatchStatus\": \"Inactive\"\r\n    }\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/roleProgramBatchStatus/{{USERID_R03}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"roleProgramBatchStatus",
								"{{USERID_R03}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update_User_LoginStatus_200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"loginStatus\": \"Active\",\r\n  \"password\": \"abcd1234\",\r\n  \"roleIds\": [\r\n    \"R02\"\r\n  ],\r\n  \"status\": \"Active\",\r\n  \"userLoginEmail\": \"{{$randomEmail}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/userLogin/{{USERID_R03}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"userLogin",
								"{{USERID_R03}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update_User_LoginStatus_400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"loginStatus\": \"Active\",\r\n  \"password\": \"abcd1234\",\r\n  \"roleIds\": [\r\n    \"R02\"\r\n  ],\r\n  \"status\": \"Active\",\r\n  \"userLoginEmail\": \"{{$randomEmail}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/userLogin/{{USERID_R03}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"userLogin",
								"{{USERID_R03}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update_User_LoginStatus_404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"loginStatus\": \"Active\",\r\n  \"password\": \"abcd1234\",\r\n  \"roleIds\": [\r\n    \"R02\"\r\n  ],\r\n  \"status\": \"Active\",\r\n  \"userLoginEmail\": \"{{$randomEmail}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/userLogin/{{USERID_R03}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"userLogin",
								"{{USERID_R03}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign_Update_UserRole_Program_Batch_Status_400",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.get(\"PROGRAMID\");\r",
									"\r",
									"\r",
									"pm.collectionVariables.get(\"BatchId\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"programId\": \"{{PROGRAMID}}\",\r\n  \"roleId\": \"R03\",\r\n  \"userId\": \"{{USERID_R03}}\",\r\n  \"userRoleProgramBatches\": [\r\n    {\r\n      \"batchId\": {{BATCHID}},\r\n      \"userRoleProgramBatchStatus\": \"Active\"\r\n    }\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/roleProgramBatchStatus/{{USERID_R03}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"roleProgramBatchStatus",
								"{{USERID_R03}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign_Update_UserRole_Program_Batch_Status_404",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.get(\"PROGRAMID\");\r",
									"\r",
									"\r",
									"pm.collectionVariables.get(\"BatchId\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"programId\": \"{{PROGRAMID}}\",\r\n  \"roleId\": \"R03\",\r\n  \"userId\": \"{{USERID_R03}}\",\r\n  \"userRoleProgramBatches\": [\r\n    {\r\n      \"batchId\": {{BATCHID}},\r\n      \"userRoleProgramBatchStatus\": \"Active\"\r\n    }\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/roleProgramBatchStatus/U2020",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"roleProgramBatchStatus",
								"U2020"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update_User__RoleID_404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userRoleList\": [\r\n    \"R02\"\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/roleId/U0",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"roleId",
								"U0"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update_User__RoleID_200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userRoleList\": [\r\n    \"R01\"\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/roleId/{{USERID}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"roleId",
								"{{USERID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update_User__RoleStatus_400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"roleId\": \"R01\",\r\n  \"userRoleStatus\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/roleStatus/{{USERID}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"roleStatus",
								"{{USERID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update_User__RoleStatus_404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"roleId\": \"R01\",\r\n  \"userRoleStatus\": \"Active\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/roleStatus/U000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"roleStatus",
								"U000"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update_User_400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userComments\": \"{{userComments}}\",\r\n  \"userEduPg\": \"{{userEduPg}}\",\r\n  \"userEduUg\": \"{{userEduUg}}\",\r\n  \"userFirstName\": \"\",\r\n  \"userId\": \"{{USERID}}\",\r\n  \"userLastName\": \"{{userLastName}}\",\r\n \"userMiddleName\": \"{{userMiddleName}}\",\r\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\r\n  \"userLocation\": \"{{userLocation}}\",\r\n   \"userPhoneNumber\": {{$randomInt}},\r\n  \"userTimeZone\": \"{{userTimeZone}}\",\r\n  \"userVisaStatus\": \"{{userVisaStatus}}\"\r\n}\r\n\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/{{USERID}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"{{USERID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get_Active_Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/users/activeUsers",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"activeUsers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get_All_Users_With_Roles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/users/roles",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"roles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get_All_Roles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/roles",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"roles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get_Count_Active_Inactive_Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/users/byStatus",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"byStatus"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get_User_Information_By_UserID_200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/users/{{USERID_R03}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"{{USERID_R03}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get_User_Information_By_UserID_404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/users/\"\"",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"\"\""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get_User_By_Program_Batches",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/users/programBatch/{{BATCHID}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"programBatch",
								"{{BATCHID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get_Users_For_Program",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//pm.globals.set(\"PROGRAMID\",\"{{programID}}\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/users/programs/{{PROGRAMID}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"programs",
								"{{PROGRAMID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get_Users_By_RoleID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/users/roles/{{ROLEID}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"roles",
								"{{ROLEID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get_Users_By_RoleID_V2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/v2/users",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"v2",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete_All_Programs/Batches_Assigned_To_The_User_By_ User_ID-200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									" });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJzZGV0b3JnYW5pemVyc0BnbWFpbC5jb20iLCJpYXQiOjE3MTAwNTUzMzgsImV4cCI6MTcxMDA4NDEzOH0.C34aTuFnuqU92C9YFM0bg_hjgUaesx1G_4BCbIJEd2lvrIkQCqfR8jwtxgD_X-hDJJNOGBwf89nFQWyjPwrjDA",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/userRoleProgramBatchMap/deleteAll/{{USERID}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"userRoleProgramBatchMap",
								"deleteAll",
								"{{USERID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete_User_200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/{{USERID}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"{{USERID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete_User_404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/U0",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"U0"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete_Batch_By_Batch_ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Validate Status Code\r",
									"pm.test(\"Status code is 200\", ()=>{\r",
									"pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"//Validate Message\r",
									"pm.test(\"Validate Message\", () => {\r",
									"    pm.expect(pm.response.text()).to.include(\"deleted Successfully\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/batches/{{BATCHID}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"batches",
								"{{BATCHID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete_Program_By_Program_ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/deletebyprogid/{{PROGRAMID}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"deletebyprogid",
								"{{PROGRAMID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "User_Logout",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"password\": \"Numpyninja@1\",\r\n  \"userLoginEmailId\": \"sdetorganizers@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://lms-marchapi-hackathon-a258d2bbd43b.herokuapp.com/lms/logoutlms",
							"protocol": "https",
							"host": [
								"lms-marchapi-hackathon-a258d2bbd43b",
								"herokuapp",
								"com"
							],
							"path": [
								"lms",
								"logoutlms"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Batch",
			"item": [
				{
					"name": "user Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"const response = pm.response.json();\r",
									"pm.globals.set(\"bearerToken\", response.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userLoginEmailId\": \"sdetorganizers@gmail.com\",\r\n  \"password\": \"Numpyninja@1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Program",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Validate Status Code\r",
									"pm.test(\"Status code is 201\", ()=>{\r",
									"pm.response.to.have.status(201);\r",
									"})\r",
									"\r",
									"pm.test(\"Check Status Text\", ()=>{\r",
									"    pm.response.to.have.status('Created');\r",
									"})\r",
									"\r",
									"//Validate Header\r",
									"pm.test(\"Content-Type header is present\", ()=>{\r",
									"pm.response.to.have.header(\"Content-Type\");\r",
									"})\r",
									"\r",
									"//Created variable to strore response\r",
									"const response = pm.response.json();\r",
									"\r",
									"console.log(response)\r",
									"pm.collectionVariables.set(\"ProgramId\", response.programId);\r",
									"pm.collectionVariables.set(\"ProgramName\", response.programName);\r",
									"\r",
									"//Validating Fields\r",
									"pm.test(\"Test data of the response\", ()=>{\r",
									"pm.expect(response).to.be.an(\"object\");\r",
									"pm.expect(response.programId).to.be.eql(pm.variables.get(\"ProgramId\"));\r",
									"pm.expect(response.programName).to.eql(pm.variables.get(\"ProgramName\"));\r",
									"pm.expect(response.programStatus).to.eql(pm.variables.get(\"ProgramStatus\"));\r",
									"});\r",
									"\r",
									"var schema =\r",
									"{\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"programId\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"programName\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"programDescription\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"programStatus\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"creationTime\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"lastModTime\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"programId\",\r",
									"    \"programName\",\r",
									"    \"programDescription\",\r",
									"    \"programStatus\",\r",
									"    \"creationTime\",\r",
									"    \"lastModTime\"\r",
									"  ]\r",
									"}\r",
									"pm.test(\"Schema is valid\", ()=>{\r",
									"pm.expect(tv4.validate(response,schema)).to.be.true\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var ProgramName = \"Jun23-APICollectors-SDET-\" + pm.variables.replaceIn('{{$randomInt}}');\r",
									"var date = new Date();\r",
									"var hour = date.getHours().toString();\r",
									"var minute = date.getMinutes().toString();\r",
									"var secs = date.getMilliseconds().toString();\r",
									"//var dateformat = year + month + day + hour + minute + secs;\r",
									"var month = date.getMonth().toString();\r",
									"var dateformat = hour+minute+month+secs;\r",
									"pm.globals.set(\"counterForProgram\",dateformat);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"programDescription\": \"{{ProgramDescription}}\",\r\n  \"programName\": \"{{ProgramName}}{{counterForProgram}}\",\r\n  \"programStatus\": \"{{ProgramStatus}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/saveprogram",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"saveprogram"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create New Batch",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", ()=> {\r",
									"pm.response.to.have.status(201);\r",
									"})\r",
									"\r",
									"pm.test(\"Check Status Text\", ()=>{\r",
									"    pm.response.to.have.status('Created');\r",
									"})\r",
									"\r",
									"//Validate Header\r",
									"pm.test(\"Content-Type header is present\", ()=>{\r",
									"pm.response.to.have.header(\"Content-Type\");\r",
									"pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");\r",
									"})\r",
									"\r",
									"//create variable for response body\r",
									"const response = pm.response.json();\r",
									"\r",
									" pm.collectionVariables.set(\"BatchName\", response.batchName);\r",
									" pm.collectionVariables.set(\"BatchId\", response.batchId);\r",
									"\r",
									"//Validating Fields\r",
									"pm.test(\"Test data of the response\", ()=>{\r",
									"pm.expect(response.programId).to.be.eql(pm.variables.get(\"ProgramId\"));\r",
									"pm.expect(response.programName).to.be.eql(pm.variables.get(\"ProgramName\"));\r",
									"pm.expect(response.batchName).to.be.eql(pm.variables.get(\"BatchName\"));\r",
									"pm.expect(response.batchId).to.be.eql(pm.variables.get(\"BatchId\"));\r",
									"\r",
									"pm.expect(response).to.be.an(\"object\");\r",
									"pm.expect(response.batchId).to.be.an(\"number\");\r",
									"pm.expect(response.batchName).to.be.an(\"string\");\r",
									"pm.expect(response.batchDescription).to.be.an(\"string\");\r",
									"pm.expect(response.batchNoOfClasses).to.be.an(\"number\");\r",
									"pm.expect(response.batchStatus).to.be.an(\"string\");\r",
									"pm.expect(response.programId).to.be.an(\"number\");\r",
									"pm.expect(response.programName).to.be.an(\"string\");\r",
									"});\r",
									"\r",
									"console.log;\r",
									"var schema =\r",
									"{\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"batchId\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"batchName\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"batchDescription\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"batchStatus\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"batchNoOfClasses\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"programId\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"programName\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"batchId\",\r",
									"    \"batchName\",\r",
									"    \"batchDescription\",\r",
									"    \"batchStatus\",\r",
									"    \"batchNoOfClasses\",\r",
									"    \"programId\",\r",
									"    \"programName\"\r",
									"  ]\r",
									"}\r",
									"pm.test(\"Schema is valid\", ()=>{\r",
									"pm.expect(tv4.validate(response,schema)).to.be.true\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var BatchName=\"March24-Team29_APICrew-SDET-SDET93-\"+pm.variables.replaceIn('{{$randomInt}}');\r",
									"pm.collectionVariables.get(\"ProgramId\");\r",
									"pm.collectionVariables.get(\"ProgramName\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"batchDescription\": \"{{BatchDescription}}\",\r\n  \"batchName\": \"{{BatchName}}\",\r\n  \"batchNoOfClasses\": \"{{No of Classes}}\",\r\n  \"batchStatus\": \"{{BatchStatus}}\",\r\n  \"programId\": \"{{ProgramId}}\"\r\n }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/batches",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"batches"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create New Batch status 400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", ()=> {\r",
									"pm.response.to.have.status(400);\r",
									"})\r",
									"\r",
									"pm.test(\"Check Status Text\", ()=>{\r",
									"    pm.response.to.have.status('Bad Request');\r",
									"})\r",
									"\r",
									"//Validate Header\r",
									"pm.test(\"Content-Type header is present\", ()=>{\r",
									"pm.response.to.have.header(\"Content-Type\");\r",
									"pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");    \r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var BatchName=\"March24-Team29_APICrew-SDET-SDET93-\"+pm.variables.replaceIn('{{$randomInt}}');\r",
									"pm.collectionVariables.get(\"ProgramId\");\r",
									"pm.collectionVariables.get(\"ProgramName\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"batchDescription\": \"{{BatchDescription}}\",\r\n  \"batchName\": \"{{BatchName}}\",\r\n  \"batchNoOfClasses\": \"{{NoofClasses}}\",\r\n  \"batchStatus\": \"{{BatchStatus}}\",\r\n  \"programId\": \"{{ProgramId}}\"\r\n }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/batches",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"batches"
							]
						}
					},
					"response": []
				},
				{
					"name": "get All Batches",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");\r",
									"   \r",
									"});\r",
									"console.log;       "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/batches",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"batches"
							]
						}
					},
					"response": []
				},
				{
					"name": "get Batch by Batch Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//validate Response body\r",
									"   pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");\r",
									"   \r",
									"});\r",
									"//Get the response result\r",
									"var response = pm.response.json();\r",
									"\r",
									"//Validating Fields\r",
									"pm.test(\"Test data type of the response\", ()=>{\r",
									"pm.expect(response).to.be.an(\"object\");\r",
									"pm.expect(response.batchId).to.be.an(\"number\");\r",
									"pm.expect(response.batchName).to.be.an(\"string\");\r",
									"pm.expect(response.batchDescription).to.be.an(\"string\");\r",
									"pm.expect(response.batchNoOfClasses).to.be.an(\"number\");\r",
									"pm.expect(response.batchStatus).to.be.an(\"string\");\r",
									"pm.expect(response.programId).to.be.an(\"number\");\r",
									"pm.expect(response.programName).to.be.an(\"string\");\r",
									"});\r",
									"\r",
									"console.log;\r",
									"\r",
									"var schema =\r",
									"{\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"batchId\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"batchName\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"batchDescription\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"batchStatus\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"batchNoOfClasses\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"programId\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"programName\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"batchId\",\r",
									"    \"batchName\",\r",
									"    \"batchDescription\",\r",
									"    \"batchStatus\",\r",
									"    \"batchNoOfClasses\",\r",
									"    \"programId\",\r",
									"    \"programName\"\r",
									"  ]\r",
									"}\r",
									"pm.test(\"Schema is valid\", ()=>{\r",
									"pm.expect(tv4.validate(response,schema)).to.be.true\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/batches/batchId/{{BatchId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"batches",
								"batchId",
								"{{BatchId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Batch by Batch Name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//validate Response body\r",
									"   pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");\r",
									"});\r",
									"console.log;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/batches/batchName/{{BatchName}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"batches",
								"batchName",
								"{{BatchName}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Batch by Batch Name status 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//validate Response body\r",
									"   pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"});\r",
									"\r",
									"console.log;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/batches/batchName/{{InvalidBatchName}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"batches",
								"batchName",
								"{{InvalidBatchName}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Batch by Program Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//validate Response body\r",
									"   pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"});\r",
									"console.log;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/batches/program/{{ProgramId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"batches",
								"program",
								"{{ProgramId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Batch by Program Id status 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//validate Response body\r",
									"   pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"});\r",
									"\r",
									"console.log;\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/batches/program/{{InvalidProgramId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"batches",
								"program",
								"{{InvalidProgramId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update by Batch Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Validate Status Code\r",
									"pm.test(\"Status code is 200\", ()=>{\r",
									"pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"const response = pm.response.json();\r",
									"\r",
									"//Validating Fields\r",
									"pm.test(\"Test data type of the response\", ()=>{\r",
									"pm.expect(response).to.be.an(\"object\");\r",
									"pm.expect(response.batchId).to.be.an(\"number\");\r",
									"pm.expect(response.batchName).to.be.an(\"string\");\r",
									"pm.expect(response.programId).to.be.an(\"number\");\r",
									"pm.expect(response.programName).to.be.an(\"string\");\r",
									"});\r",
									"var schema =\r",
									"{\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"batchId\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"batchName\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"batchDescription\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"batchStatus\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"batchNoOfClasses\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"programId\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"programName\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"batchId\",\r",
									"    \"batchName\",\r",
									"    \"batchDescription\",\r",
									"    \"batchStatus\",\r",
									"    \"batchNoOfClasses\",\r",
									"    \"programId\",\r",
									"    \"programName\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"Schema is valid\", ()=>{\r",
									"pm.expect(tv4.validate(response,schema)).to.be.true\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var random_Batname=\"March24-Team29_APICrew-SDET-SDET93-\"+pm.variables.replaceIn('{{$randomInt}}');\r",
									"pm.collectionVariables.get(\"programId\");\r",
									"pm.collectionVariables.get(\"programName\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"batchDescription\": \"{{BatchDescription}}\",\r\n  \"batchId\": \"{{BatchId}}\",\r\n  \"batchName\": \"{{BatchName}}\",\r\n  \"batchNoOfClasses\": \"{{No of Classes}}\",\r\n  \"batchStatus\": \"{{BatchStatus}}\",\r\n  \"programId\": \"{{ProgramId}}\",\r\n  \"programName\": \"{{ProgramName}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/batches/{{BatchId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"batches",
								"{{BatchId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update by Batch Id status 400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Validate Status Code\r",
									"pm.test(\"Status code is 400\", ()=>{\r",
									"pm.response.to.have.status(400);\r",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var random_Batname=\"March24-Team29_APICrew-SDET-SDET93-\"+pm.variables.replaceIn('{{$randomInt}}');\r",
									"pm.collectionVariables.get(\"programId\");\r",
									"pm.collectionVariables.get(\"programName\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"batchDescription\": \"{{null}}\",\r\n  \"batchId\": \"{{BatchId}}\",\r\n  \"batchName\": \"{{BatchName}}\",\r\n  \"batchNoOfClasses\": \"{{No of Classes}}\",\r\n  \"batchStatus\": \"{{BatchStatus}}\",\r\n  \"programId\": \"{{ProgramId}}\",\r\n  \"programName\": \"{{ProgramName}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/batches/{{BatchId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"batches",
								"{{BatchId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete batch by BatchId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Validate Status Code\r",
									"pm.test(\"Status code is 200\", ()=>{\r",
									"pm.response.to.have.status(200);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/batches/{{BatchId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"batches",
								"{{BatchId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete batch by invalid  BatchId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Validate Status Code\r",
									"pm.test(\"Status code is 404\", ()=>{\r",
									"pm.response.to.have.status(404);\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/batches/{{invalidBatchId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"batches",
								"{{invalidBatchId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Create_Roll_Staff_R02",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//validate status code\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"  //validates header\r",
									"pm.test(\"Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"\r",
									"console.log(response.userId);\r",
									"pm.globals.set('USERID', response.userId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userComments\": \"{{userComments}}\",\r\n  \"userEduPg\": \"{{userEduPg}}\",\r\n  \"userEduUg\": \"{{userEduUg}}\",\r\n  \"userFirstName\": \"{{userFirstName}}\",\r\n  \"userId\": \"string\",\r\n  \"userLastName\": \"{{userLastName}}\",\r\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\r\n  \"userLocation\": \"{{userLocation}}\",\r\n  \"userLogin\": {\r\n    \"loginStatus\": \"{{loginStatus}}\",\r\n    \"password\": \"string\",\r\n    \"roleIds\": [\r\n      \"String\"\r\n    ],\r\n    \"status\": \"{{status}}\",\r\n    \"userLoginEmail\": \"{{userLoginEmail}}\"\r\n  },\r\n  \"userMiddleName\": \"{{userMiddleName}}\",\r\n  \"userPhoneNumber\": \"{{userPhoneNumber}}\",\r\n  \"userRoleMaps\": [\r\n    {\r\n      \"roleId\": \"{{roleId}}\",\r\n      \"userRoleStatus\": \"{{userRoleStatus}}\"\r\n    }\r\n  ],\r\n  \"userTimeZone\": \"{{userTimeZone}}\",\r\n  \"userVisaStatus\": \"{{userVisaStatus}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/roleStatus",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"roleStatus"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create_Role_Staff_R02_400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//validate status code\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"  //validates header\r",
									"pm.test(\"Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"\r",
									"console.log(response.userId);\r",
									"pm.globals.set('USERID', response.userId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userComments\": \"{{   }}\",\r\n  \"userEduPg\": \"{{userEduPg}}\",\r\n  \"userEduUg\": \"{{userEduUg}}\",\r\n  \"userFirstName\": \"{{userFirstName}}\",\r\n  \"userId\": \"string\",\r\n  \"userLastName\": \"{{userLastName}}\",\r\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\r\n  \"userLocation\": \"{{userLocation}}\",\r\n  \"userLogin\": {\r\n    \"loginStatus\": \"{{loginStatus}}\",\r\n    \"password\": \"string\",\r\n    \"roleIds\": [\r\n      \"String\"\r\n    ],\r\n    \"status\": \"{{status}}\",\r\n    \"userLoginEmail\": \"{{userLoginEmail}}\"\r\n  },\r\n  \"userMiddleName\": \"{{userMiddleName}}\",\r\n  \"userPhoneNumber\": \"{{   }}\",     \r\n  \"userRoleMaps\": [\r\n    {\r\n      \"roleId\": \"{{roleId}}\",\r\n      \"userRoleStatus\": \"{{userRoleStatus}}\"\r\n    }\r\n  ],\r\n  \"userTimeZone\": \"{{userTimeZone}}\",\r\n  \"userVisaStatus\": \"{{userVisaStatus}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/roleStatus",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"roleStatus"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create_Role_Student_R03",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userComments\": \"{{userComments}}\",\r\n  \"userEduPg\": \"{{userEduPg}}\",\r\n  \"userEduUg\": \"{{userEduUg}}\",\r\n  \"userFirstName\": \"{{userFirstName}}\",\r\n  \"userId\": \"string\",\r\n  \"userLastName\": \"{{userLastName}}\",\r\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\r\n  \"userLocation\": \"{{userLocation}}\",\r\n  \"userLogin\": {\r\n    \"loginStatus\": \"{{loginStatus}}\",\r\n    \"password\": \"string\",\r\n    \"roleIds\": [\r\n      \"String\"\r\n    ],\r\n    \"status\": \"{{status}}\",\r\n    \"userLoginEmail\": \"{{userLoginEmail}}\"\r\n  },\r\n  \"userMiddleName\": \"{{userMiddleName}}\",\r\n  \"userPhoneNumber\": \"{{userPhoneNumber}}\",\r\n  \"userRoleMaps\": [\r\n    {\r\n      \"roleId\": \"{{roleId}}\",\r\n      \"userRoleStatus\": \"{{userRoleStatus}}\"\r\n    }\r\n  ],\r\n  \"userTimeZone\": \"{{userTimeZone}}\",\r\n  \"userVisaStatus\": \"{{userVisaStatus}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/roleStatus",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"roleStatus"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create_Role_Admin_R01",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//validate status code\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"  //validates header\r",
									"pm.test(\"Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"\r",
									"console.log(response.userId);\r",
									"pm.globals.set('USERID', response.userId);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const randomNumber = _.random(1000000000,9999999999)\r",
									"pm.variables.set(\"Phone\", randomNumber );"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userComments\": \"{{userComments}}\",\r\n  \"userEduPg\": \"{{userEduPg}}\",\r\n  \"userEduUg\": \"{{userEduUg}}\",\r\n  \"userFirstName\": \"{{userFirstName}}\",\r\n  \"userId\": \"string\",\r\n  \"userLastName\": \"{{userLastName}}\",\r\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\r\n  \"userLocation\": \"{{userLocation}}\",\r\n  \"userLogin\": {\r\n    \"loginStatus\": \"{{loginStatus}}\",\r\n    \"password\": \"string\",\r\n    \"roleIds\": [\r\n      \"String\"\r\n    ],\r\n    \"status\": \"{{status}}\",\r\n    \"userLoginEmail\": \"{{userLoginEmail}}\"\r\n  },\r\n  \"userMiddleName\": \"{{userMiddleName}}\",\r\n  \"userPhoneNumber\": \"{{$randomInt}}\",\r\n  \"userRoleMaps\": [\r\n    {\r\n      \"roleId\": \"{{roleId}}\",\r\n      \"userRoleStatus\": \"{{userRoleStatus}}\"\r\n    }\r\n  ],\r\n  \"userTimeZone\": \"{{userTimeZone}}\",\r\n  \"userVisaStatus\": \"{{userVisaStatus}}\"\r\n}\r\n\r\n\r\n\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/roleStatus",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"roleStatus"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create_Role_Student_R03_400",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userComments\": \"{{}}\",\r\n  \"userEduPg\": \"{{}}\",\r\n  \"userEduUg\": \"{{}}\",\r\n  \"userFirstName\": \"{{}}\",\r\n  \"userId\": \"string\",\r\n  \"userLastName\": \"   \",\r\n  \"userLinkedinUrl\": \"  \",\r\n  \"userLocation\": \"{{userLocation}}\",\r\n  \"userLogin\": {\r\n    \"loginStatus\": \"{{loginStatus}}\",\r\n    \"password\": \"string\",\r\n    \"roleIds\": [\r\n      \"String\"\r\n    ],\r\n    \"status\": \"{{status}}\",\r\n    \"userLoginEmail\": \"{{userLoginEmail}}\"\r\n  },\r\n  \"userMiddleName\": \"{{userMiddleName}}\",\r\n  \"userPhoneNumber\": \"{{userPhoneNumber}}\",\r\n  \"userRoleMaps\": [\r\n    {\r\n      \"roleId\": \"{{roleId}}\",\r\n      \"userRoleStatus\": \"{{userRoleStatus}}\"\r\n    }\r\n  ],\r\n  \"userTimeZone\": \"{{userTimeZone}}\",\r\n  \"userVisaStatus\": \"{{userVisaStatus}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/roleStatus",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"roleStatus"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add_New_Program-201",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//var cDateStr = new Date().toISOString();\r",
									"//var lDateStr = new Date().toISOString();\r",
									"var date = new Date();\r",
									"//var year = date.getFullYear().toString();\r",
									"//var day = date.getDay().toString();\r",
									"var hour = date.getHours().toString();\r",
									"var minute = date.getMinutes().toString();\r",
									"var secs = date.getMilliseconds().toString();\r",
									"//var dateformat = year + month + day + hour + minute + secs;\r",
									"var month = date.getMonth().toString();\r",
									"var dateformat = hour+minute+month+secs;\r",
									"pm.globals.set(\"counterForProgram\",dateformat);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//validate status code\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"//validate headers\r",
									"pm.test('content-type header is present',()=>{\r",
									"pm.response.to.have.header('Content-Type');\r",
									"});\r",
									"pm.test('content-types header is application/json',()=> {\r",
									"pm.expect(pm.response.headers.\r",
									"    get(\"Content-Type\")).to.eql(\"application/json\");\r",
									"});\r",
									"\r",
									"//validate data type\r",
									"const response = pm.response.json();\r",
									"pm.test('test data-types of the response',()=> {\r",
									"pm.expect(response).to.be.an('object');\r",
									"pm.expect(response.programName).to.be.a('string');\r",
									"pm.expect(response.programStatus).to.be.a('string');\r",
									"pm.expect(response.programDescription).to.be.a('string');\r",
									"pm.expect(response.programId).to.be.a('number');\r",
									"});\r",
									"\r",
									"//validate schema\r",
									"var schema={\r",
									"'$schema': 'http://json-schema.org/draft-07/schema#',\r",
									"'title': 'Generated schema for Root',\r",
									"'type': 'object',\r",
									"'properties': {\r",
									"'programId': {\r",
									"'type': 'number'\r",
									"},\r",
									"'programName': {\r",
									"'type': 'string'\r",
									"},\r",
									"'programDescription': {\r",
									"'type': 'string'\r",
									"},\r",
									"'programStatus': {\r",
									"'type': 'string'\r",
									"},\r",
									"'creationTime': {\r",
									"'type': 'string'\r",
									"},\r",
									"'lastModTime': {\r",
									"'type': 'string'\r",
									"}\r",
									"},\r",
									"'required': [\r",
									"'programId',\r",
									"'programName',\r",
									"'programStatus',\r",
									"'creationTime',\r",
									"'lastModTime'\r",
									"]\r",
									"}\r",
									"pm.test('schema validations',()=>{\r",
									"pm.expect(tv4.validate(response,schema)).to.be.true;\r",
									"});\r",
									"\r",
									"console.log(response.programId);\r",
									"pm.globals.set('PROGRAMID', response.programId);\r",
									"console.log(response.programName);\r",
									"pm.globals.set('PROGRAMNAME', response.programName);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"programDescription\" : \"{{programDesc}}\",\r\n\"programName\" : \"{{teamName}}{{programName}}{{counterForProgram}}\",\r\n\"programStatus\" : \"{{programStatus}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/saveprogram",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"saveprogram"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create New Batch",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//pm.environment.get(\"ProgramId\");\r",
									"//var BatchName=\"March24-Team29_APICrew-SDET-SDET93-\"+pm.variables.replaceIn('{{$randomInt}}');\r",
									"//var random_Batname=\"March24-Team29_APICrew-SDET-SDET93-\"+pm.variables.replaceIn('{{$randomInt}}');\r",
									"//pm.collectionVariables.get(\"ProgramId\");\r",
									"//pm.collectionVariables.get(\"ProgramName\");\r",
									"//pm.globals.get(\"PROGRAMNAME\");\r",
									"//March24-TeamName-ProgramName-BatchName-serialnumber \r",
									"//Ex: March24-EliteForce-SDET-SDET01-001\r",
									"\r",
									"\r",
									"\r",
									"var date = new Date();\r",
									"//var year = date.getFullYear().toString();\r",
									"//var day = date.getDay().toString();\r",
									"var hour = date.getHours().toString();\r",
									"var minute = date.getMinutes().toString();\r",
									"var secs = date.getMilliseconds().toString();\r",
									"//var dateformat = year + month + day + hour + minute + secs;\r",
									"var month = date.getMonth().toString();\r",
									"var dateformat = hour+minute+month+secs;\r",
									"pm.globals.set(\"counter\",dateformat);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", ()=> {\r",
									"pm.response.to.have.status(201);\r",
									"})\r",
									"\r",
									"pm.test(\"Check Status Text\", ()=>{\r",
									"    pm.response.to.have.status('Created');\r",
									"})\r",
									"\r",
									"//Validate Header\r",
									"pm.test(\"Content-Type header is present\", ()=>{\r",
									"pm.response.to.have.header(\"Content-Type\");\r",
									"pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");\r",
									"//pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"    \r",
									"})\r",
									"\r",
									"//create variable for response body\r",
									"const response = pm.response.json();\r",
									"\r",
									" pm.collectionVariables.set(\"BatchName\", response.batchName);\r",
									" pm.collectionVariables.set(\"BatchId\", response.batchId);\r",
									"\r",
									"pm.globals.set(\"BATCHID\", response.batchId);\r",
									"pm.globals.set(\"BATCHNAME\", response.batchName);\r",
									"\r",
									"\r",
									"//Validating Fields\r",
									"// pm.test(\"Test data of the response\", ()=>{\r",
									"// pm.expect(response.programId).to.be.eql(pm.variables.get(\"ProgramId\"));\r",
									"// pm.expect(response.programName).to.be.eql(pm.variables.get(\"{{ProgramName}}\"));\r",
									"// pm.expect(response.batchName).to.be.eql(pm.variables.get(\"BatchName\"));\r",
									"// pm.expect(response.batchId).to.be.eql(pm.variables.get(\"BatchId\"));\r",
									"\r",
									"// pm.expect(response).to.be.an(\"object\");\r",
									"// pm.expect(response.batchId).to.be.an(\"number\");\r",
									"// pm.expect(response.batchName).to.be.an(\"string\");\r",
									"// pm.expect(response.batchDescription).to.be.an(\"string\");\r",
									"// pm.expect(response.batchNoOfClasses).to.be.an(\"number\");\r",
									"// pm.expect(response.batchStatus).to.be.an(\"string\");\r",
									"// pm.expect(response.programId).to.be.an(\"number\");\r",
									"// pm.expect(response.programName).to.be.an(\"string\");\r",
									"// });\r",
									"\r",
									"// console.log;\r",
									"// var schema =\r",
									"// {\r",
									"//   \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"//   \"type\": \"object\",\r",
									"//   \"properties\": {\r",
									"//     \"batchId\": {\r",
									"//       \"type\": \"integer\"\r",
									"//     },\r",
									"//     \"batchName\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"batchDescription\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"batchStatus\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"batchNoOfClasses\": {\r",
									"//       \"type\": \"integer\"\r",
									"//     },\r",
									"//     \"programId\": {\r",
									"//       \"type\": \"integer\"\r",
									"//     },\r",
									"//     \"programName\": {\r",
									"//       \"type\": \"string\"\r",
									"//     }\r",
									"//   },\r",
									"//   \"required\": [\r",
									"//     \"batchId\",\r",
									"//     \"batchName\",\r",
									"//     \"batchDescription\",\r",
									"//     \"batchStatus\",\r",
									"//     \"batchNoOfClasses\",\r",
									"//     \"programId\",\r",
									"//     \"programName\"\r",
									"//   ]\r",
									"// }\r",
									"// pm.test(\"Schema is valid\", ()=>{\r",
									"// pm.expect(tv4.validate(response,schema)).to.be.true\r",
									"// });\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"batchDescription\": \"{{BatchDescription}}\",\r\n  //\"batchName\": \"{{batchName}}\",\r\n  \"batchName\": \"{{teamName}}{{batchName}}{{counter}}\",\r\n  \"batchNoOfClasses\": \"{{No of Classes}}\",\r\n  \"batchStatus\": \"{{BatchStatus}}\",\r\n  \"programId\": \"{{PROGRAMID}}\"\r\n }\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/batches",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"batches"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete_User_404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/U0",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"U0"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create_UserRole_R03",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//validate status code\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"  //validates header\r",
									"pm.test(\"Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"const response= pm.response.json();\r",
									"//console.log(response.userId);\r",
									"pm.globals.set('USERID_R03', response.userId);\r",
									"\r",
									"pm.globals.set('EMAIL', response.userLoginEmail);\r",
									"//pm.globals.set(\"PWD\", response.password);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"const randomNumber = _.random(1000000000,9999999999)\r",
									"pm.variables.set(\"Phone\", randomNumber )\r",
									" \r",
									"\r",
									"var randomstr= \"sadana\"+Math.random().toString(36).substring(2);\r",
									"pm.variables.set(\"email\",randomstr+\"@gmail.com\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userComments\": \"{{userComments}}\",\r\n  \"userEduPg\": \"{{userEduPg}}\",\r\n  \"userEduUg\": \"{{userEduUg}}\",\r\n  \"userFirstName\": \"{{userFirstName}}\",\r\n  \"userId\": \"string\",\r\n  \"userLastName\": \"{{userLastName}}\",\r\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\r\n  \"userLocation\": \"{{userLocation}}\",\r\n  \"userLogin\": {\r\n    \"loginStatus\": \"{{loginStatus}}\",\r\n    \"password\": \"string\",\r\n    \"roleIds\": [\r\n      \"R03\"\r\n    ],\r\n    \"status\": \"{{status}}\",\r\n    \"userLoginEmail\": \"{{email}}\"\r\n  },\r\n  \"userMiddleName\": \"{{userMiddleName}}\",\r\n  \"userPhoneNumber\":\"{{Phone}}\",\r\n  \"userRoleMaps\": [\r\n    {\r\n      \"roleId\": \"R03\",\r\n      \"userRoleStatus\": \"{{userRoleStatus}}\"\r\n    }\r\n  ],\r\n  \"userTimeZone\": \"{{userTimeZone}}\",\r\n  \"userVisaStatus\": \"{{userVisaStatus}}\"\r\n}\r\n\r\n\r\n\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/roleStatus",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"roleStatus"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create_UserRole",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//validate status code\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"  //validates header\r",
									"pm.test(\"Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"const response= pm.response.json();\r",
									"//console.log(response.userId);\r",
									"pm.globals.set('USERID', response.userId);\r",
									"\r",
									"pm.globals.set('EMAIL', response.userLoginEmail);\r",
									"//pm.globals.set(\"PWD\", response.password);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"const randomNumber = _.random(1000000000,9999999999)\r",
									"pm.variables.set(\"Phone\", randomNumber )\r",
									" \r",
									"\r",
									"var randomstr= \"sadana\"+Math.random().toString(36).substring(2);\r",
									"pm.variables.set(\"email\",randomstr+\"@gmail.com\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userComments\": \"{{userComments}}\",\r\n  \"userEduPg\": \"{{userEduPg}}\",\r\n  \"userEduUg\": \"{{userEduUg}}\",\r\n  \"userFirstName\": \"{{userFirstName}}\",\r\n  \"userId\": \"string\",\r\n  \"userLastName\": \"{{userLastName}}\",\r\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\r\n  \"userLocation\": \"{{userLocation}}\",\r\n  \"userLogin\": {\r\n    \"loginStatus\": \"{{loginStatus}}\",\r\n    \"password\": \"string\",\r\n    \"roleIds\": [\r\n      \"R01\"\r\n    ],\r\n    \"status\": \"{{status}}\",\r\n    \"userLoginEmail\": \"{{email}}\"\r\n  },\r\n  \"userMiddleName\": \"{{userMiddleName}}\",\r\n  \"userPhoneNumber\":\"{{Phone}}\",\r\n  \"userRoleMaps\": [\r\n    {\r\n      \"roleId\": \"R01\",\r\n      \"userRoleStatus\": \"{{userRoleStatus}}\"\r\n    }\r\n  ],\r\n  \"userTimeZone\": \"{{userTimeZone}}\",\r\n  \"userVisaStatus\": \"{{userVisaStatus}}\"\r\n}\r\n\r\n\r\n\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/roleStatus",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"roleStatus"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get_All_Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/users",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update_User_200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userComments\": \"{{userComments}}\",\r\n  \"userEduPg\": \"{{userEduPg}}\",\r\n  \"userEduUg\": \"{{userEduUg}}\",\r\n  \"userFirstName\": \"{{userFirstName}}\",\r\n  \"userId\": \"{{USERID}}\",\r\n  \"userLastName\": \"{{userLastName}}\",\r\n \"userMiddleName\": \"{{userMiddleName}}\",\r\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\r\n  \"userLocation\": \"{{userLocation}}\",\r\n   \"userPhoneNumber\": {{$randomInt}},\r\n  \"userTimeZone\": \"{{userTimeZone}}\",\r\n  \"userVisaStatus\": \"{{userVisaStatus}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/{{USERID}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"{{USERID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update_User__RoleStatus_200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"roleId\": \"R01\",\r\n  \"userRoleStatus\": \"Active\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/roleStatus/{{USERID}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"roleStatus",
								"{{USERID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign_Update_UserRole_Program_Batch_Status_200",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.get(\"PROGRAMID\");\r",
									"\r",
									"\r",
									"//pm.collectionVariables.get(\"BatchId\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"programId\": \"{{PROGRAMID}}\",\r\n  \"roleId\": \"R03\",\r\n  \"userId\": \"{{USERID_R03}}\",\r\n  \"userRoleProgramBatches\": [\r\n    {\r\n      \"batchId\": {{BATCHID}},\r\n      \"userRoleProgramBatchStatus\": \"Active\"\r\n    }\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/roleProgramBatchStatus/{{USERID_R03}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"roleProgramBatchStatus",
								"{{USERID_R03}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update_User_LoginStatus_200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"loginStatus\": \"Active\",\r\n  \"password\": \"abcd1234\",\r\n  \"roleIds\": [\r\n    \"R02\"\r\n  ],\r\n  \"status\": \"Active\",\r\n  \"userLoginEmail\": \"{{$randomEmail}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/userLogin/{{USERID}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"userLogin",
								"{{USERID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update_User_LoginStatus_400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"loginStatus\": \"Active\",\r\n  \"password\": \"abcd1234\",\r\n  \"roleIds\": [\r\n    \"R02\"\r\n  ],\r\n  \"status\": \"Active\",\r\n  \"userLoginEmail\": \"{{$randomEmail}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/userLogin/{{USERID}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"userLogin",
								"{{USERID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update_User_LoginStatus_404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"loginStatus\": \"Active\",\r\n  \"password\": \"abcd1234\",\r\n  \"roleIds\": [\r\n    \"R02\"\r\n  ],\r\n  \"status\": \"Active\",\r\n  \"userLoginEmail\": \"{{$randomEmail}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/userLogin/{{USERID}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"userLogin",
								"{{USERID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign_Update_UserRole_Program_Batch_Status_400",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.get(\"PROGRAMID\");\r",
									"\r",
									"\r",
									"pm.collectionVariables.get(\"BatchId\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"programId\": \"{{PROGRAMID}}\",\r\n  \"roleId\": \"R03\",\r\n  \"userId\": \"{{USERID_R03}}\",\r\n  \"userRoleProgramBatches\": [\r\n    {\r\n      \"batchId\": {{BATCHID}},\r\n      \"userRoleProgramBatchStatus\": \"Active\"\r\n    }\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/roleProgramBatchStatus/{{USERID}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"roleProgramBatchStatus",
								"{{USERID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign_Update_UserRole_Program_Batch_Status_404",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.get(\"PROGRAMID\");\r",
									"\r",
									"\r",
									"pm.collectionVariables.get(\"BatchId\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"programId\": \"{{PROGRAMID}}\",\r\n  \"roleId\": \"R03\",\r\n  \"userId\": \"{{USERID_R03}}\",\r\n  \"userRoleProgramBatches\": [\r\n    {\r\n      \"batchId\": {{BATCHID}},\r\n      \"userRoleProgramBatchStatus\": \"Active\"\r\n    }\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/roleProgramBatchStatus/{{USERID}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"roleProgramBatchStatus",
								"{{USERID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update_User__RoleID_404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userRoleList\": [\r\n    \"R02\"\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/roleId/U0",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"roleId",
								"U0"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update_User__RoleID_200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userRoleList\": [\r\n    \"R01\"\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/roleId/{{USERID}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"roleId",
								"{{USERID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update_User__RoleStatus_400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"roleId\": \"R01\",\r\n  \"userRoleStatus\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/roleStatus/{{USERID}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"roleStatus",
								"{{USERID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update_User__RoleStatus_404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"roleId\": \"R01\",\r\n  \"userRoleStatus\": \"Active\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/roleStatus/U000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"roleStatus",
								"U000"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update_User_400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userComments\": \"{{userComments}}\",\r\n  \"userEduPg\": \"{{userEduPg}}\",\r\n  \"userEduUg\": \"{{userEduUg}}\",\r\n  \"userFirstName\": \"\",\r\n  \"userId\": \"{{USERID}}\",\r\n  \"userLastName\": \"{{userLastName}}\",\r\n \"userMiddleName\": \"{{userMiddleName}}\",\r\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\r\n  \"userLocation\": \"{{userLocation}}\",\r\n   \"userPhoneNumber\": {{$randomInt}},\r\n  \"userTimeZone\": \"{{userTimeZone}}\",\r\n  \"userVisaStatus\": \"{{userVisaStatus}}\"\r\n}\r\n\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/{{USERID}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"{{USERID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get_Active_Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/users/activeUsers",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"activeUsers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get_All_Users_With_Roles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/users/roles",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"roles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get_All_Roles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/roles",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"roles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get_Count_Active_Inactive_Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/users/byStatus",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"byStatus"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get_User_Information_By_UserID_200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/users/{{USERID}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"{{USERID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get_User_Information_By_UserID_404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/users/\"\"",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"\"\""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get_User_By_Program_Batches",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/users/programBatch/{{BATCHID}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"programBatch",
								"{{BATCHID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get_Users_For_Program",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//pm.globals.set(\"PROGRAMID\",\"{{programID}}\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/users/programs/{{PROGRAMID}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"programs",
								"{{PROGRAMID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get_Users_By_RoleID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/users/roles/{{ROLEID}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"roles",
								"{{ROLEID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get_Users_By_RoleID_V2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/v2/users",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"v2",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete_User_200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/{{USERID}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"{{USERID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete_User_404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/U0",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"U0"
							]
						}
					},
					"response": []
				},
				{
					"name": "User_Logout",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"password\": \"Numpyninja@1\",\r\n  \"userLoginEmailId\": \"sdetorganizers@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://lms-marchapi-hackathon-a258d2bbd43b.herokuapp.com/lms/logoutlms",
							"protocol": "https",
							"host": [
								"lms-marchapi-hackathon-a258d2bbd43b",
								"herokuapp",
								"com"
							],
							"path": [
								"lms",
								"logoutlms"
							]
						}
					},
					"response": []
				},
				{
					"name": "UserLogin_UserModule",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"const response = pm.response.json();\r",
									"pm.globals.set(\"bearerToken\", response.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userLoginEmailId\": \"sdetorganizers@gmail.com\",\r\n  \"password\": \"Numpyninja@1\"\r\n}\r\n\r\n\r\n\r\n\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User Role Map",
			"item": [
				{
					"name": "Negative",
					"item": [
						{
							"name": "UserLogin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"userLoginEmailId\": \"sdetorganizers@gmail.com\",\r\n  \"password\": \"Numpyninja@1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}}}/login",
									"host": [
										"{{baseURL}}}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Assigned Program/Batch(es) of All Users",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJzZGV0b3JnYW5pemVyc0BnbWFpbC5jb20iLCJpYXQiOjE3MTAxNjA2MzksImV4cCI6MTcxMDE4OTQzOX0.S50b89GXNjUlic4LI_UoShsHhvHtO3HdhYZEWfXVu-i2TX1eR1Z9tFKBdmbmpMuQUNsUoQ2Cy8xQDfjacy0E",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/userRoleProgramBatchMap",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"userRoleProgramBatchMap"
									]
								}
							},
							"response": []
						},
						{
							"name": "Assigned Program/Batch of a User By User Id",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJzZGV0b3JnYW5pemVyc0BnbWFpbC5jb20iLCJpYXQiOjE3MTAxNjA2MzksImV4cCI6MTcxMDE4OTQzOX0.S50b89GXNjUlic4LI_UoShsHhvHtO3HdhYZEWfXVu-i2TX1eR1Z9tFKBdmbmpMuQUNsUoQ2Cy8xQDfjacy0E",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/userRoleProgramBatchMap/{U43}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"userRoleProgramBatchMap",
										"{U43}"
									]
								}
							},
							"response": []
						},
						{
							"name": "All Programs/Batches assigned to the User By UserId",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJzZGV0b3JnYW5pemVyc0BnbWFpbC5jb20iLCJpYXQiOjE3MTAxNjA2MzksImV4cCI6MTcxMDE4OTQzOX0.S50b89GXNjUlic4LI_UoShsHhvHtO3HdhYZEWfXVu-i2TX1eR1Z9tFKBdmbmpMuQUNsUoQ2Cy8xQDfjacy0E",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/userRoleProgramBatchMap/deleteAll/{U44}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"userRoleProgramBatchMap",
										"deleteAll",
										"{U44}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Positive",
					"item": [
						{
							"name": "UserLogin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"userLoginEmailId\": \"sdetorganizers@gmail.com\",\r\n  \"password\": \"Numpyninja@1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/login",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Assigned Program/Batch(es) of All Users",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"var schema=\r",
											"{\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"array\",\r",
											"  \"items\": [\r",
											"    {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"userId\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"roleId\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"programId\": {\r",
											"          \"type\": \"integer\"\r",
											"        },\r",
											"        \"batchId\": {\r",
											"          \"type\": \"integer\"\r",
											"        },\r",
											"        \"userRoleProgramBatchStatus\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"        \"userId\",\r",
											"        \"roleId\",\r",
											"        \"programId\",\r",
											"        \"batchId\",\r",
											"        \"userRoleProgramBatchStatus\"\r",
											"      ]\r",
											"    }\r",
											"  ]\r",
											"}\r",
											"\r",
											"var schema = {\r",
											"    \"items\": {\r",
											"        \"type\": \"boolean\"\r",
											"    }\r",
											"};\r",
											"\r",
											"var data1 = [true, false];\r",
											"var data2 = [true, 123];\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"    pm.expect(tv4.validate(data1, schema)).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJzZGV0b3JnYW5pemVyc0BnbWFpbC5jb20iLCJpYXQiOjE3MTAxNjA2MzksImV4cCI6MTcxMDE4OTQzOX0.S50b89GXNjUlic4LI_UoShsHhvHtO3HdhYZEWfXVu-i2TX1eR1Z9tFKBdmbmpMuQUNsUoQ2Cy8xQDfjacy0Ekg",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/userRoleProgramBatchMap",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"userRoleProgramBatchMap"
									]
								}
							},
							"response": []
						},
						{
							"name": "Assigned Program/Batch of a User By User Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											" var schema=\r",
											"{\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"array\",\r",
											"  \"items\": [\r",
											"    {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"userId\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"roleId\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"programId\": {\r",
											"          \"type\": \"integer\"\r",
											"        },\r",
											"        \"batchId\": {\r",
											"          \"type\": \"integer\"\r",
											"        },\r",
											"        \"userRoleProgramBatchStatus\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"        \"userId\",\r",
											"        \"roleId\",\r",
											"        \"programId\",\r",
											"        \"batchId\",\r",
											"        \"userRoleProgramBatchStatus\"\r",
											"      ]\r",
											"    }\r",
											"  ]\r",
											"}\r",
											"var schema={\r",
											" \"items\": {\r",
											"        \"type\": \"boolean\"\r",
											"    }\r",
											"};\r",
											"\r",
											"var data1 = [true, false];\r",
											"var data2 = [true, 123];   \r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJzZGV0b3JnYW5pemVyc0BnbWFpbC5jb20iLCJpYXQiOjE3MTAxNjA2MzksImV4cCI6MTcxMDE4OTQzOX0.S50b89GXNjUlic4LI_UoShsHhvHtO3HdhYZEWfXVu-i2TX1eR1Z9tFKBdmbmpMuQUNsUoQ2Cy8xQDfjacy0Ekg",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/userRoleProgramBatchMap/{{userid}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"userRoleProgramBatchMap",
										"{{userid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "All Programs/Batches assigned to the User By UserId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJzZGV0b3JnYW5pemVyc0BnbWFpbC5jb20iLCJpYXQiOjE3MTAxNjA2MzksImV4cCI6MTcxMDE4OTQzOX0.S50b89GXNjUlic4LI_UoShsHhvHtO3HdhYZEWfXVu-i2TX1eR1Z9tFKBdmbmpMuQUNsUoQ2Cy8xQDfjacy0Ekg",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/userRoleProgramBatchMap/deleteAll/{{userid}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"userRoleProgramBatchMap",
										"deleteAll",
										"{{userid}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "{userid",
			"value": "U44"
		},
		{
			"key": "Userid",
			"value": "U1097"
		},
		{
			"key": "{{userid}}",
			"value": "U1097"
		},
		{
			"key": "ProgramId",
			"value": ""
		},
		{
			"key": "ProgramName",
			"value": ""
		},
		{
			"key": "BatchName",
			"value": ""
		},
		{
			"key": "BatchId",
			"value": ""
		}
	]
}